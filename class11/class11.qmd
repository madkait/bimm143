---
title: "Class11: Candy Project"
author: "Kaitlyn Madriaga, A17217752"
format: pdf
---

In today's class we will examine 
```{r}
candy <- read.csv("candy-data.csv", row.names = 1)
head(candy)
```


> Q1. How many different candy types are in this dataset? 

```{r}
nrow(candy)
```

> Q2. How many fruity candy types are in this dataset? 

```{r}
sum(candy$fruity)
```

> Q. What are these fruity candy? 

We can use the == ; candy$fruity == 1 will give us a set of TRUE/FALSE values

```{r}
head(candy[candy$fruity == 1, ])
```
## How often does my favorite candy win? 

winpercent is the percentage of people who choose a candy over another randomly chosen candy from the dataset 

```{r}
candy["Twix", ]$winpercent
```

> Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

```{r}
candy["Sour Patch Kids", ]$winpercent
```

> Q4. What is the winpercent for KitKat? 

```{r}
candy["Kit Kat", ]$winpercent
```

> Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy["Tootsie Roll Snack Bars", ]$winpercent
```

```{r}
skimr::skim(candy)
```

> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset? 

`winpercent` column is on a 0:100 scale and all others appear to be 0:1 

> Q7. What do you think a zero and one represent for the candy$chocolate column?

A zero here means the candy is not classified as containing chocolate. 

> Q8. Plot a histogram of winpercent values

In base R graphics: 
```{r}
hist(candy$winpercent)
```

```{r}
library(ggplot2)

ggplot(candy) +
  aes(winpercent) +
  geom_histogram(bins = 10)
```

> Q9. Is the distribution of winpercent values symmetrical?

No 

> Q10. Is the center of the distribution above or below 50%?

below 50%, with a median of 47

```{r}
median(candy$winpercent)
mean(candy$winpercent)
```

> Q11. On average, is chocolate candy higher or lower ranked than fruit candy? 

To answer this question, I will need to:
- "subset" (aka "select", "filter") the candy dataset to just chocolate candy
- get the winpercent files 
- calculate the mean of these, 

Then do the same for fruity candy and compare. 


```{r}
mean(candy[candy$chocolate == 1,]$winpercent)

#can also use as.logical(candy$chocolate) to get TRUE/FALSE values 

mean(candy[as.logical(candy$fruity), ]$winpercent)
```
To break it down: 

```{r}
#Filter/select/subset to just chocolate rows 
chocolate.candy <- candy[as.logical(candy$chocolate),]
fruity.candy <- candy[as.logical(candy$fruity),]

#Get their winpercent values
chocolate.winpercent <- chocolate.candy$winpercent 
fruity.winpercent <- fruity.candy$winpercent 

#Calculate their mean winpercent value 
mean(chocolate.winpercent)
mean(fruity.winpercent)
```

The mean winpercent for chocolate candy is 60.92153, while the mean winpercent for fruity candy is 44.11974.  Thus, chocolate candy is ranked higher. 


> Q12. Is this difference statistically significant?

```{r}
t.test(chocolate.winpercent, fruity.winpercent)
```

## Overall Candy Rankings 

There is a base R function called `sort()` for sorting vectors of input 

```{r}
x <- c(5, 2, 10)

#sort(x, decreasing = TRUE)
sort(x)
```

The buddy function to `sort()` that is often useful is called `order()`. It returns the indices of the input that would result in it being sorted. 

```{r}
order(x)
x[ order(x) ]
```

> Q13. What are the five least liked candy types in this set?

I can order by `winpercent` 

```{r}
ord <- order(candy$winpercent)
head(candy[ord, ], 5)
#This will order the candy from lowest winpercent to highest
```
> Q14. What are the top 5 all time favorite candy types out of this set?


```{r}
ord2 <- order(candy$winpercent, decreasing = TRUE)
head(candy[ord2,], 5)
```

> Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
ggplot(candy) + 
  aes(winpercent, row.names(candy)) +
  geom_col()

#We use geom_col(), geom_bar() computes stuff for you
```

> Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(row.names(candy), winpercent)) +
  geom_col()
```

```{r}
#makes a black vector for each candy 
my_cols=rep("black", nrow(candy))
#overwrites chocolate candy as a chocolate color (no longer black)
my_cols[as.logical(candy$chocolate)] = "chocolate"
#overwrites bars as brown
my_cols[as.logical(candy$bar)] = "brown"
#overwrites fruity candy as pink 
my_cols[as.logical(candy$fruity)] = "pink"
```

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col(fill=my_cols)
```
> Q17. What is the worst ranked chocolate candy?

Sixlets

> Q18. What is the best ranked fruity candy?

Starburst 

## Taking a look at pricepercent 

> What is the best candy for the least money? 

We can determine this by looking at winpercent vs pricepercent 

```{r}
my_cols[as.logical(candy$fruity)] = "red"

```

```{r}
# How about a plot of price vs win
ggplot(candy) +
  aes(winpercent, pricepercent) +
  geom_point(col=my_cols)
```


Add some labels 

```{r}
ggplot(candy) +
  aes(winpercent, pricepercent, label= rownames(candy)) +
  geom_point(col=my_cols) +
  geom_text()
```

To deal with overlapping labels, I can use the **ggrepel** package 

```{r}
library(ggrepel)

ggplot(candy) +
  aes(winpercent, pricepercent, label= rownames(candy)) +
  geom_point(col=my_cols) +
  geom_text_repel(col = my_cols, size = 3.3, max.overlaps = 6)
```

## Exploring the correlation structure 

Pearson correlation goes between -1 and +1, with zero indicating no correlation. 
Values close to 1 are very highly (anti) correlated. 

```{r}
library(corrplot)

cij <- cor(candy)
corrplot(cij)
```

> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

fruity + chocolate 

> Q23. Similarly, what two variables are most positively correlated?

chocolate + winpercent or chocolate + bar 

## Principal Component Analysis 

The base function for PCA is called `prcomp()` and we can set "scale = TRUE/FALSE"

```{r}
pca <- prcomp(candy, scale = TRUE)
summary(pca)
```

The main result of PCA - i.e. the new PC plot (projection of candy on our new PC axis) is contained in `pca$x`

```{r}
pc <- as.data.frame(pca$x)

p <- ggplot(pc) +
  aes(PC1, PC2, label = rownames(pc)) + 
  geom_point(col = my_cols) +
  geom_text_repel(col = my_cols, max.overlaps = 5)

p

```

```{r}
#library(plotly)

#ggplotly(p)
```

> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```

fruity, hard, pluribus are captured in PC1 
