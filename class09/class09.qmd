---
title: "class09: structural bioinformatics"
author: "Kaitlyn Madriaga, A17217752"
format: pdf
editor: visual
---

## PDB Statistics 

The PDB is the main database for structural information on biomolecules.  Let's see what it contains: 

```{r}
db <- read.csv("pdb_stats.csv")
#db
```

```{r}
knitr::kable(db)
```

> Q1: What percentage of structures in the PDB are solved by X-Ray and Electron Microscopy

```{r}
#1) use gsub() to remove commas 
#2) use as.numeric() to convert chr to numbers
#3) take the sum 
sum(as.numeric(gsub(",", "", db$X.ray)))
```
```{r}
#write a function: 
sum_comma <- function(x) {
  #Substitute the comma and convert to numeric 
  sum(as.numeric(gsub(",","", x)))
}
```

For Xray: 
```{r}
sum_comma(db$X.ray) / sum_comma(db$Total)
```
For EM: 
```{r}
round(sum_comma(db$EM) / sum_comma(db$Total), 2)
```

> Q2: What proportion of structures in the PDB are protein?

```{r}
round(sum_comma(db$Total[1]) / sum_comma(db$Total), 2)
```


> Q3: Type HIV in the PDB website search box on the home page and determine how many HIV-1 protease structures are in the current PDB?

SKIPPED!

![HIV-PR structure](1HSG.png)   

> Q4: Water molecules normally have 3 atoms. Why do we see just one atom per water molecule in this structure?

The structure is too low to see H atoms.  You need a sub 1 Angstrom resolution to see Hydrogen. 

>Q5: There is a critical “conserved” water molecule in the binding site. Can you identify this water molecule? What residue number does this water molecule have?

HOH308


# Working with Structures in R 

We can use the `bio3d` package to read and perform bioinformatics calculations on PDB structures. 

```{r}
library(bio3d)

pdb <- read.pdb("1hsg")
pdb
```

>Q7: How many amino acid residues are there in this pdb object? 

198
>Q8: Name one of the two non-protein residues? 

HOH
>Q9: How many protein chains are in this structure? 

2 chains 

```{r}
attributes(pdb)
```

```{r}
head(pdb$atom)
```

Read an ADK structure 

```{r}
adk <- read.pdb("6s36")
adk
```


Perform a prediction of flexibility with a technique called normal mode analysis (NMA)

```{r}
#Perform flexibility prediction 
m <- nma(adk)
plot(m)
```

Write out a "movie" (aka trajectory) of the motion for viewing in MOlstar 

```{r}
mktrj(m, file="adk_m7.pdb")
```


